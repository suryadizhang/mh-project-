name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'myhibachi-frontend/**'
      - 'myhibachi-admin-frontend/**'
      - '.github/workflows/fe-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'myhibachi-frontend/**'
      - 'myhibachi-admin-frontend/**'

env:
  NODE_VERSION: '18'

jobs:
  # Matrix build for both frontends
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        frontend:
          - { name: 'customer', path: 'myhibachi-frontend', port: 3000 }
          - { name: 'admin', path: 'myhibachi-admin-frontend', port: 3001 }

    defaults:
      run:
        working-directory: ${{ matrix.frontend.path }}

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ matrix.frontend.path }}/package-lock.json

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🔍 Lint Code
      run: npm run lint

    - name: 🧪 Run Unit Tests
      run: npm test -- --passWithNoTests

    - name: 🔧 Build Application
      run: npm run build

    - name: 📊 Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.frontend.name }}-build
        path: ${{ matrix.frontend.path }}/.next
        retention-days: 7

  # E2E Tests (run after builds complete)
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    if: success()

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Install Root Dependencies
      run: npm install

    - name: 📦 Install Frontend Dependencies
      run: |
        cd myhibachi-frontend && npm ci
        cd ../myhibachi-admin-frontend && npm ci

    - name: 📥 Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: customer-build
        path: myhibachi-frontend/.next

    - name: 📥 Download Admin Build
      uses: actions/download-artifact@v3
      with:
        name: admin-build
        path: myhibachi-admin-frontend/.next

    - name: 🎭 Install Playwright
      run: npx playwright install

    - name: 🧪 Run E2E Tests
      run: npx playwright test

    - name: 📊 Upload E2E Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  # Deployment readiness check
  deployment-ready:
    name: Deployment Ready
    runs-on: ubuntu-latest
    needs: [build-and-test, e2e-tests]
    if: always()

    steps:
    - name: 📊 Check Results
      run: |
        echo "## Frontend CI/CD Results" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY

        BUILD_STATUS="${{ needs.build-and-test.result }}"
        E2E_STATUS="${{ needs.e2e-tests.result }}"

        if [ "$BUILD_STATUS" = "success" ]; then
          echo "| 🎨 Frontend Builds | ✅ PASSED |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🎨 Frontend Builds | ❌ FAILED |" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "$E2E_STATUS" = "success" ]; then
          echo "| 🧪 E2E Tests | ✅ PASSED |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🧪 E2E Tests | ❌ FAILED |" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "$BUILD_STATUS" = "success" ] && [ "$E2E_STATUS" = "success" ]; then
          echo "| 🚀 Deploy Status | ✅ READY |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🚀 Deploy Status | ❌ BLOCKED |" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
