# =============================================================================
# Pre-commit Configuration for MyHibachi Backend - Enhanced Security & Quality
# =============================================================================

repos:
  # General file formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        description: Remove trailing whitespace
      - id: end-of-file-fixer
        description: Ensure files end with newline
      - id: check-yaml
        description: Check YAML syntax
      - id: check-json
        description: Check JSON syntax
      - id: check-toml
        description: Check TOML syntax
      - id: check-merge-conflict
        description: Check for merge conflict markers
      - id: mixed-line-ending
        description: Ensure consistent line endings
        args: ['--fix=lf']
      - id: check-added-large-files
        description: Check for large files
        args: ['--maxkb=1000']
      - id: check-case-conflict
        description: Check for case conflicts

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        description: Format Python code with Black
        args: [--line-length=88]
        language_version: python3

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        description: Lint and fix Python code with Ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        description: Sort Python imports
        args: [--profile, black, --line-length, "88"]

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: '1.7.5'
    hooks:
      - id: bandit
        description: Security linting with Bandit
        args: ['-r', 'myhibachi-backend-fastapi/app/', '--skip', 'B101']

  # Python Type Checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v1.7.1'
    hooks:
      - id: mypy
        description: Static type checking with MyPy
        additional_dependencies: [types-requests, types-python-dateutil]
        args: ['--ignore-missing-imports']

  # Dockerfile Linting
  - repo: https://github.com/hadolint/hadolint
    rev: 'v2.12.0'
    hooks:
      - id: hadolint-docker
        description: Lint Dockerfiles
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # TypeScript/JavaScript formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        description: Format TypeScript/JavaScript with Prettier
        files: \.(ts|tsx|js|jsx|json|css|scss|md)$
        exclude: ^(package-lock\.json|\.next/)

  # Custom security checks
  - repo: local
    hooks:
      - id: check-env-files
        name: Check for sensitive data in env files
        description: Prevent committing live keys
        entry: bash
        args: ['-c', 'if grep -rq "sk_live_\\|pk_live_\\|whsec_" *.env* 2>/dev/null; then echo "ERROR: Live keys found!"; exit 1; fi']
        language: system
        pass_filenames: false

      - id: check-requirements
        name: Check requirements.txt format
        description: Validate Python requirements
        entry: python
        args: ['-c', 'import pkg_resources; [pkg_resources.Requirement.parse(line) for line in open("myhibachi-backend-fastapi/requirements.txt") if line.strip() and not line.startswith("#")]']
        language: system
        pass_filenames: false
        files: requirements\.txt$

# Configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.6.0'
