"""Update chat system with new models

Revision ID: cdf67096c06d
Revises: 56d701cf2472
Create Date: 2025-09-21 15:06:08.371209

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "cdf67096c06d"
down_revision = "56d701cf2472"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "conversations",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("channel", sa.String(length=20), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=False),
        sa.Column("thread_id", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("channel_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("closed_at", sa.DateTime(), nullable=True),
        sa.Column("escalated_at", sa.DateTime(), nullable=True),
        sa.Column("assigned_agent_id", sa.String(length=255), nullable=True),
        sa.Column("escalation_reason", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_conversation_created",
        "conversations",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "idx_conversation_status", "conversations", ["status"], unique=False
    )
    op.create_index(
        "idx_conversation_thread", "conversations", ["thread_id"], unique=False
    )
    op.create_index(
        "idx_conversation_user_channel",
        "conversations",
        ["user_id", "channel"],
        unique=False,
    )
    op.create_table(
        "escalation_rules",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("rule_name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.Column("confidence_threshold", sa.Float(), nullable=True),
        sa.Column("sentiment_threshold", sa.Float(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("rule_name"),
    )
    op.create_index(
        "idx_escalation_active",
        "escalation_rules",
        ["is_active"],
        unique=False,
    )
    op.create_index(
        "idx_escalation_priority",
        "escalation_rules",
        ["priority"],
        unique=False,
    )
    op.create_table(
        "kb_chunks",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("vector", sa.JSON(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column("source_type", sa.String(length=50), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=True),
        sa.Column("success_rate", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("source_message_id", sa.String(length=36), nullable=True),
        sa.Column("created_by_agent_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_kb_category", "kb_chunks", ["category"], unique=False)
    op.create_index(
        "idx_kb_source_type", "kb_chunks", ["source_type"], unique=False
    )
    op.create_index(
        "idx_kb_updated", "kb_chunks", ["updated_at"], unique=False
    )
    op.create_index("idx_kb_usage", "kb_chunks", ["usage_count"], unique=False)
    op.create_table(
        "training_data",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("question", sa.Text(), nullable=False),
        sa.Column("answer", sa.Text(), nullable=False),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("intent", sa.String(length=100), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("source_type", sa.String(length=50), nullable=False),
        sa.Column(
            "source_conversation_id", sa.String(length=36), nullable=True
        ),
        sa.Column("source_message_id", sa.String(length=36), nullable=True),
        sa.Column("human_verified", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("quality_score", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_used_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_training_active", "training_data", ["is_active"], unique=False
    )
    op.create_index(
        "idx_training_intent", "training_data", ["intent"], unique=False
    )
    op.create_index(
        "idx_training_quality",
        "training_data",
        ["quality_score"],
        unique=False,
    )
    op.create_index(
        "idx_training_source", "training_data", ["source_type"], unique=False
    )
    op.create_index(
        "idx_training_verified",
        "training_data",
        ["human_verified"],
        unique=False,
    )
    op.create_table(
        "conversation_analytics",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("conversation_id", sa.String(length=36), nullable=False),
        sa.Column("total_messages", sa.Integer(), nullable=True),
        sa.Column("ai_messages", sa.Integer(), nullable=True),
        sa.Column("human_messages", sa.Integer(), nullable=True),
        sa.Column("avg_confidence", sa.Float(), nullable=True),
        sa.Column("resolution_status", sa.String(length=20), nullable=True),
        sa.Column("customer_satisfaction", sa.Integer(), nullable=True),
        sa.Column("first_response_time_seconds", sa.Integer(), nullable=True),
        sa.Column("resolution_time_seconds", sa.Integer(), nullable=True),
        sa.Column("total_tokens", sa.Integer(), nullable=True),
        sa.Column("total_cost_usd", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_analytics_conversation",
        "conversation_analytics",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        "idx_analytics_resolution",
        "conversation_analytics",
        ["resolution_status"],
        unique=False,
    )
    op.create_index(
        "idx_analytics_satisfaction",
        "conversation_analytics",
        ["customer_satisfaction"],
        unique=False,
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("conversation_id", sa.String(length=36), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("confidence", sa.Float(), nullable=True),
        sa.Column("model_used", sa.String(length=50), nullable=True),
        sa.Column("tokens_in", sa.Integer(), nullable=True),
        sa.Column("tokens_out", sa.Integer(), nullable=True),
        sa.Column("cost_usd", sa.Float(), nullable=True),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.Column(
            "intent_classification", sa.String(length=50), nullable=True
        ),
        sa.Column("kb_sources_used", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("edited_at", sa.DateTime(), nullable=True),
        sa.Column("human_feedback", sa.String(length=20), nullable=True),
        sa.Column("human_correction", sa.Text(), nullable=True),
        sa.Column("is_training_data", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_message_confidence", "messages", ["confidence"], unique=False
    )
    op.create_index(
        "idx_message_conversation",
        "messages",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        "idx_message_created", "messages", ["created_at"], unique=False
    )
    op.create_index("idx_message_role", "messages", ["role"], unique=False)
    op.create_index(
        "idx_message_training", "messages", ["is_training_data"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_message_training", table_name="messages")
    op.drop_index("idx_message_role", table_name="messages")
    op.drop_index("idx_message_created", table_name="messages")
    op.drop_index("idx_message_conversation", table_name="messages")
    op.drop_index("idx_message_confidence", table_name="messages")
    op.drop_table("messages")
    op.drop_index(
        "idx_analytics_satisfaction", table_name="conversation_analytics"
    )
    op.drop_index(
        "idx_analytics_resolution", table_name="conversation_analytics"
    )
    op.drop_index(
        "idx_analytics_conversation", table_name="conversation_analytics"
    )
    op.drop_table("conversation_analytics")
    op.drop_index("idx_training_verified", table_name="training_data")
    op.drop_index("idx_training_source", table_name="training_data")
    op.drop_index("idx_training_quality", table_name="training_data")
    op.drop_index("idx_training_intent", table_name="training_data")
    op.drop_index("idx_training_active", table_name="training_data")
    op.drop_table("training_data")
    op.drop_index("idx_kb_usage", table_name="kb_chunks")
    op.drop_index("idx_kb_updated", table_name="kb_chunks")
    op.drop_index("idx_kb_source_type", table_name="kb_chunks")
    op.drop_index("idx_kb_category", table_name="kb_chunks")
    op.drop_table("kb_chunks")
    op.drop_index("idx_escalation_priority", table_name="escalation_rules")
    op.drop_index("idx_escalation_active", table_name="escalation_rules")
    op.drop_table("escalation_rules")
    op.drop_index("idx_conversation_user_channel", table_name="conversations")
    op.drop_index("idx_conversation_thread", table_name="conversations")
    op.drop_index("idx_conversation_status", table_name="conversations")
    op.drop_index("idx_conversation_created", table_name="conversations")
    op.drop_table("conversations")
    # ### end Alembic commands ###
